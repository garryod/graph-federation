router:
  enabled: true
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "44180"
  router:
    args:
      - --hot-reload
      - --supergraph
      - /etc/apollo/supergraph.graphql
    configuration:
      sandbox:
        enabled: true
      homepage:
        enabled: false
      supergraph:
        introspection: true
        listen: 0.0.0.0:4000
        query_planning:
          experimental_parallelism: auto
      include_subgraph_errors:
        all: true
      headers:
        all:
          request:
            - propagate:
                matching: authorization
      cors:
        match_origins:
          - ^https:\/\/([a-zA-Z0-9\-]+\.)*diamond\.ac\.uk\/?
          - ^https?:\/\/localhost(:\d+)?\/?
      health_check:
        listen: 0.0.0.0:8088
      telemetry:
        instrumentation:
          spans:
            mode: spec_compliant
  extraVolumes:
    - name: supergraph
      configMap:
        name: "{{ .Release.Name }}-supergraph-schema"
        items:
          - key: supergraph.graphql
            path: supergraph.graphql
  extraVolumeMounts:
    - name: supergraph
      mountPath: /etc/apollo/
      readonly: true
  resources:
    requests:
      cpu: 8
      memory: 4Gi
    limits:
      cpu: 16
      memory: 8Gi

oauth2-proxy:
  enabled: true
  ingress:
    enabled: true
    hostname: graph.diamond.ac.uk
    pathType: Prefix
    hosts:
      - graph.diamond.ac.uk
    path: /
  config:
    configFile: |-
      skip_provider_button = true
      email_domains = [
        "diamond.ac.uk"
      ]
      skip_auth_routes = [
        "POST=^/$",
        "OPTIONS=^/$"
      ]
  alphaConfig:
    enabled: true
    configData:
      injectRequestHeaders:
        - name: Authorization
          values:
            - claim: access_token
              prefix: "Bearer "
          preserveRequestValue: true
      injectResponseHeaders:
        - name: Identity
          values:
            - claim: id_token
      providers:
        - provider: oidc
          scope: "openid profile email fedid"
          clientId: graph
          clientSecretFile: /etc/alpha/client-secret
          id: authn
          oidcConfig:
            issuerURL: https://authn.diamond.ac.uk/realms/dls
            insecureAllowUnverifiedEmail: true
            audienceClaims:
              - aud
            emailClaim: email
            userIDClaim: email
    configFile: |
      upstreamConfig:
        upstreams:
          - id: router
            path: /
            uri: http://{{ .Release.Name }}-router:80
  extraVolumes:
    - name: client-secret
      secret:
        secretName: "{{ .Release.Name }}-oauth2-client"
        items:
          - key: secret
            path: client-secret
  extraVolumeMounts:
    - name: client-secret
      mountPath: /etc/alpha
      readOnly: true
